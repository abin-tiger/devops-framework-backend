trigger:
  batch: true

  tags:
    include:
    - v*
  

variables:
  - name: tag
    value: '$(Build.SourceBranchName)'
  - group: devops-framework-backend-global

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-20.04'

    steps:
    - task: Docker@2
      inputs:
        command: 'build'
        Dockerfile: '**/Dockerfile'
        repository: $(imageRepository)
        tags: |
          $(tag)
    
    - task: ECRPushImage@1
      name: 'PushToECR'
      inputs:
        awsCredentials: $(awsCredentials)
        regionName: 'us-east-1'
        imageSource: 'imagename'
        sourceImageName: $(imageRepository)
        sourceImageTag: $(tag)
        pushTag: $(tag)
        repositoryName: $(imageRepository)
        autoCreateRepository: true
        outputVariable: 'ecrPushOutput'
        logRequest: true
        logResponse: true

    - pwsh: |
        Write-Host "##vso[task.setvariable variable=ecrImage;isOutput=true]$(ecrPushOutput)"
      name: ECRImageOutputStep
        
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Build.SourcesDirectory)/manifests
        targetFolder: $(Build.ArtifactStagingDirectory)/k8s/manifests

    - publish: $(build.artifactStagingDirectory)
      artifact: drop

    - task: UniversalPackages@0
      displayName: Universal Publish
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

      inputs:
        command: publish
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        vstsFeedPublish: 'devops-framework/devops-framework-backend'
        vstsFeedPackagePublish: 'devops-framework-backend'
        packagePublishDescription: 'DevOps Framework Backend application'
        versionOption: custom
        versionPublish: replace($(tag), 'v', '')


- stage: Prod
  displayName: 'Deploy to the Prod environment'
  condition: and(
    succeeded(),
    ne(variables['Build.Reason'], 'PullRequest'),
    startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    )
  dependsOn: Build
  jobs:
  - template: templates/deploy-kubernetes.yaml
    parameters:
      variableGroup: devops-framework-backend-prod
      environment: prod
